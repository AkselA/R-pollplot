% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_polls.R
\name{get_polls}
\alias{get_polls}
\title{Get polling results}
\usage{
get_polls(serieid = c(1:8, 15, 25, 626), min.length = 8, verbose = TRUE,
  list = FALSE)
}
\arguments{
\item{serieid}{the id of the series to be retrieved}

\item{min.length}{the minimum length for a series to be included}

\item{verbose}{print messages}

\item{list}{return output as a list}
}
\value{
if \code{list=FALSE} an object of class \code{pollplot} is returned.
This is an array of NA-padded polling data. 
Dates are along the first dimension, parties (always 10) are
along the second dimension, and series are along the third dimension.
In addition to dimnames, a few other attributes are included. \code{date} 
is a \code{"Date"} vector corresponding to the first dimension of the array.
\code{info} is a \code{data.frame} of serieid, institute and client values
corresponding to the retrieved series.
}
\description{
Retrieve polling results from \code{pollofpolls.no}
}
\details{
Calls are made to \code{pollofpolls.no} to retrieve archived general election
polling results.
}
\examples{
pp <- get_polls(5:8)
summary(pp)

# head, tail and window methods
# first year
head(pp, 365)
window(pp, start=start(pp), end=start(pp)+365)

# entire 2010
window(pp, start="2010-01-01", end="2010-12-31")

# last 30 days
tail(pp, 30)
window(pp, start=Sys.Date()-30)

# end is always Sys.Date() at the time of retrieval
end(pp)

# start is the date of the earlies sample. Depends on serieid
start(pp)
start(get_polls(10))

# basic plotting
pp.t <- window(pp, start=Sys.Date()-120)
pp.tf <- apply(pp.t, 1:2, mean, na.rm=TRUE)
nna <- which(!is.na(pp.tf[, 1]))
matplot(time(pp.t)[nna], pp.tf[nna, ], type="l", xaxt="n")
axis.Date(1, time(pp.t)[nna])
legend("top", colnames(pp.tf), ncol=5, bty="n", xpd=NA, inset=-0.15,
  cex=0.85, lty=1:5, col=1:6)

# more compact format. No methods for it...
pp.l <- get_polls(c(2, 7, 10), list=TRUE)

# but easily converted to a list of irregular-time zoo objects
library(zoo)
pp.z <- lapply(pp.l, function(x) read.zoo(x[,-(1:2)]))

library(xts)
pp.zc <- apply.daily(do.call(rbind.xts, pp.z), "mean")

plot(rollmean(pp.zc, 30))

}
